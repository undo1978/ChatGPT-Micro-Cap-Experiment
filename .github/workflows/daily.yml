name: daily-microcap

on:
  schedule:
    - cron: "5 15 * * *"  # 18:05 EEST (suvi)
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: daily-microcap
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: DEBUG – show which workflow file this run is using
        run: |
          echo "Workflow path (from GITHUB_WORKFLOW_REF): $GITHUB_WORKFLOW_REF"
          echo "Repository: $GITHUB_REPOSITORY  Commit: $GITHUB_SHA"
          echo "--------- .github/workflows/daily.yml (from repo) ---------"
          sed -n '1,200p' .github/workflows/daily.yml || true
          echo "-----------------------------------------------------------"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/extra-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Lihtne nädalavahetuse kontroll
      - name: Check trading day (weekend fallback)
        id: marketday
        shell: bash
        run: |
          if python - <<'PY'
          import datetime as dt, sys
          sys.exit(0 if dt.date.today().weekday() < 5 else 1)
          PY
          then
            echo "is_open=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_open=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install deps
        if: steps.marketday.outputs.is_open == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f extra-requirements.txt ]; then python -m pip install -r extra-requirements.txt; fi
          # Debug: näita mis paketid reaalselt installitud on
          python -m pip list

      - name: Run headless + email summary
        if: steps.marketday.outputs.is_open == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO:   ${{ secrets.EMAIL_TO }}
          TOTAL_PORTFOLIO_EUR: ${{ secrets.TOTAL_PORTFOLIO_EUR }}
          TRADE_BUDGET_EUR: ${{ secrets.TRADE_BUDGET_EUR }}
          STOP_PCT: ${{ secrets.STOP_PCT }}
          STARTING_CASH: ${{ secrets.STARTING_CASH }}
          RISK_PERC: ${{ secrets.RISK_PERC }}
          MAX_SPREAD_PCT: ${{ secrets.MAX_SPREAD_PCT }}
          TRAILING_WINDOW: ${{ secrets.TRAILING_WINDOW }}
        run: |
          ls -la
          echo "Python executable:"
          which python
          python --version
          echo "Running script…"
          python trading_script.py --headless --allocation 0.10 --sizing risk
